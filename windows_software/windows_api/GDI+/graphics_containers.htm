<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Graphics Containers</title>
</head>

<body>

<h1 align="center"><font color="#008000">Graphics Containers</font></h1>
<p><font size="4">A <b>Graphics</b> object can be thought of as a container 
because it holds a set of properties that influence drawing, and it is linked to 
device-specific information.</font></p>
<p><font size="4">The graphics object's <b><font color="#008000">Quality 
Settings</font> </b>can be set using: </font><b><font size="4">
SetTextRenderingHint, SetSmoothingMode, SetCompositingMode, 
SetCompositingQuality, SetInterpolationMode</font></b></p>
<p><font size="4">The graphics object's <b><font color="#008000">Transformations</font>
</b>can be set using: <b>ResetTransform</b>, <b>RotateTransform</b>, <b>
SetPageUnit</b>, ...</font></p>
<p><font size="4">A <b>Graphics</b> object maintains a <b><font color="#008000">
clipping region</font></b> that applies to all items drawn by that <b>Graphics</b> 
object.</font></p>
<p><font size="4">For example, you can perform a union on two rectangles to get 
a &quot;plus&quot;-shaped clipping region.</font></p>
<p><img border="0" src="images/pic07.gif" width="164" height="166"></p>
<p><font size="4"><a href="examples/clipping.cpp">Click here for the code that 
generates</a></font></p>
<p>&nbsp;</p>
<p><font size="4">Probably for efficiency reasons, GDI+ makes it possible to 
store some settings of the Graphics object as a &quot;</font><b><font size="4" color="#008000">GraphicsContainer</font></b><font size="4">&quot; 
and then use this container to initialize the Graphics object. I say nah... it's 
not necessary. </font></p>

</body>

</html>
